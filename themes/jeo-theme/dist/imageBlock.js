!function(e){var t={};function a(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,a),i.l=!0,i.exports}a.m=e,a.c=t,a.d=function(e,t,n){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)a.d(n,i,function(t){return e[t]}.bind(null,i));return n},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p=".//dist",a(a.s=41)}({0:function(e,t){!function(){e.exports=this.wp.blockEditor}()},1:function(e,t){!function(){e.exports=this.wp.i18n}()},2:function(e,t){!function(){e.exports=this.wp.components}()},41:function(e,t,a){e.exports=a(42)},42:function(e,t,a){"use strict";a.r(t);var n=a(0),i=a(2),r=a(1);wp.blocks.registerBlockType("jeo-theme/custom-image-block-editor",{title:"Credited Image",icon:"format-image",category:"common",supports:{align:!0},attributes:{title:{type:"string"},mediaID:{type:"number"},mediaURL:{type:"string"},mediaDescription:{type:"string"}},edit:function(e){var t=e.className,a=(e.isSelected,e.attributes),c=a.mediaID,o=a.mediaURL,l=a.title,m=a.mediaDescription,s=e.setAttributes,u=function(e){s({mediaDescription:e})},d=t;return React.createElement(React.Fragment,null,React.createElement("div",{className:"image-block-container",key:"container"},React.createElement("div",{className:"left"},React.createElement("div",{className:"callout-image"},React.createElement(n.MediaUpload,{onSelect:function(e){s({mediaURL:e.url,mediaID:e.id})},type:"image",value:c,render:function(e){var t=e.open;return React.createElement(React.Fragment,null,React.createElement(i.Button,{isSecondary:!0,className:c?"image-button margin-auto":"image-button button-large margin-auto",onClick:t},c?Object(r.__)("Replace image"):Object(r.__)("Upload Image")),c?React.createElement("div",{className:"image-wrapper"},React.createElement("img",{src:o}),React.createElement("div",{class:"image-info-wrapper"},React.createElement("span",{class:"dashicons image-icon dashicons-camera-alt"}),React.createElement(n.RichText,{tagName:"span",className:"image-meta",placeholder:Object(r.__)("Write a info here."),value:m,onChange:u}))):"")}}))),React.createElement("div",{className:d},React.createElement(n.RichText,{tagName:"span",className:"callout-title image-description margin-auto",placeholder:Object(r.__)("Write a description here."),value:l,onChange:function(e){s({title:e})}}))))},save:function(e){e.className;var t=e.attributes,a=(t.mediaID,t.mediaURL),n=t.title,i=t.mediaDescription,r=t.align;return React.createElement(React.Fragment,null,React.createElement("div",{className:"vue-component image-block-container",key:"container"},React.createElement("image-block",{alignment:r,title:n,mediaurl:a,mediadescription:i})))}})}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,